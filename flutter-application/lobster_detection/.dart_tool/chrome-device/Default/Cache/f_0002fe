define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/cupertino/scrollbar.dart', 'packages/flutter/src/material/material_state.dart', 'packages/flutter/src/animation/animation_controller.dart'], (function load__packages__flutter__src__material__scrollbar_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__cupertino__scrollbar$46dart, packages__flutter__src__material__material_state$46dart, packages__flutter__src__animation__animation_controller$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const scroll_notification = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_notification;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const scrollbar = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scrollbar;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const color_scheme = packages__flutter__src__material__icon_button$46dart.src__material__color_scheme;
  const scrollbar_theme = packages__flutter__src__material__icon_button$46dart.src__material__scrollbar_theme;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const scrollbar$ = packages__flutter__src__cupertino__scrollbar$46dart.src__cupertino__scrollbar;
  const material_state = packages__flutter__src__material__material_state$46dart.src__material__material_state;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  var scrollbar$0 = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T = {
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    ScrollNotificationTobool: () => (T.ScrollNotificationTobool = dart.constFn(dart.fnType(core.bool, [scroll_notification.ScrollNotification])))(),
    LinkedHashSetOfMaterialState: () => (T.LinkedHashSetOfMaterialState = dart.constFn(collection.LinkedHashSet$(material_state.MaterialState)))(),
    VoidToColor: () => (T.VoidToColor = dart.constFn(dart.fnType(ui.Color, [])))(),
    ColorTodynamic: () => (T.ColorTodynamic = dart.constFn(dart.fnType(dart.dynamic, [ui.Color])))(),
    SetOfMaterialState: () => (T.SetOfMaterialState = dart.constFn(core.Set$(material_state.MaterialState)))(),
    SetOfMaterialStateToColor: () => (T.SetOfMaterialStateToColor = dart.constFn(dart.fnType(ui.Color, [T.SetOfMaterialState()])))(),
    SetOfMaterialStateTodouble: () => (T.SetOfMaterialStateTodouble = dart.constFn(dart.fnType(core.double, [T.SetOfMaterialState()])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 179,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isAlwaysShown",
        [_Location_column]: 9,
        [_Location_line]: 180,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "thickness",
        [_Location_column]: 9,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "thicknessWhileDragging",
        [_Location_column]: 9,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radius",
        [_Location_column]: 9,
        [_Location_line]: 183,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radiusWhileDragging",
        [_Location_column]: 9,
        [_Location_line]: 184,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 185,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "notificationPredicate",
        [_Location_column]: 9,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9], T._LocationL());
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 178,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/material/scrollbar.dart"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 190,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 191,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isAlwaysShown",
        [_Location_column]: 7,
        [_Location_line]: 192,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showTrackOnHover",
        [_Location_column]: 7,
        [_Location_line]: 193,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverThickness",
        [_Location_column]: 7,
        [_Location_line]: 194,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "thickness",
        [_Location_column]: 7,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radius",
        [_Location_column]: 7,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "notificationPredicate",
        [_Location_column]: 7,
        [_Location_line]: 197,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactive",
        [_Location_column]: 7,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.constList([C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20], T._LocationL());
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[11] || CT.C11,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 189,
        [_Location_file]: "file:///C:/dev/flutter/packages/flutter/lib/src/material/scrollbar.dart"
      });
    },
    get C21() {
      return C[21] = dart.fn(scroll_notification.defaultScrollNotificationPredicate, T.ScrollNotificationTobool());
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Brightness.prototype,
        [_name]: "Brightness.light",
        index: 1
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.Brightness.prototype,
        [_name]: "Brightness.dark",
        index: 0
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.android",
        index: 0
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 8,
        [Radius_x]: 8
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 600000
      });
    }
  }, false);
  var C = Array(35).fill(void 0);
  var I = [
    "file:///C:/dev/flutter/packages/flutter/lib/src/material/scrollbar.dart",
    "package:flutter/src/material/scrollbar.dart"
  ];
  var child$ = dart.privateName(scrollbar$0, "Scrollbar.child");
  var controller$ = dart.privateName(scrollbar$0, "Scrollbar.controller");
  var isAlwaysShown$ = dart.privateName(scrollbar$0, "Scrollbar.isAlwaysShown");
  var showTrackOnHover$ = dart.privateName(scrollbar$0, "Scrollbar.showTrackOnHover");
  var hoverThickness$ = dart.privateName(scrollbar$0, "Scrollbar.hoverThickness");
  var thickness$ = dart.privateName(scrollbar$0, "Scrollbar.thickness");
  var radius$ = dart.privateName(scrollbar$0, "Scrollbar.radius");
  var interactive$ = dart.privateName(scrollbar$0, "Scrollbar.interactive");
  var notificationPredicate$ = dart.privateName(scrollbar$0, "Scrollbar.notificationPredicate");
  scrollbar$0.Scrollbar = class Scrollbar extends framework.StatefulWidget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get isAlwaysShown() {
      return this[isAlwaysShown$];
    }
    set isAlwaysShown(value) {
      super.isAlwaysShown = value;
    }
    get showTrackOnHover() {
      return this[showTrackOnHover$];
    }
    set showTrackOnHover(value) {
      super.showTrackOnHover = value;
    }
    get hoverThickness() {
      return this[hoverThickness$];
    }
    set hoverThickness(value) {
      super.hoverThickness = value;
    }
    get thickness() {
      return this[thickness$];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get radius() {
      return this[radius$];
    }
    set radius(value) {
      super.radius = value;
    }
    get interactive() {
      return this[interactive$];
    }
    set interactive(value) {
      super.interactive = value;
    }
    get notificationPredicate() {
      return this[notificationPredicate$];
    }
    set notificationPredicate(value) {
      super.notificationPredicate = value;
    }
    createState() {
      return new scrollbar$0._ScrollbarState.new();
    }
  };
  (scrollbar$0.Scrollbar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[0], 111, 19, "child");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
    let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
    let hoverThickness = opts && 'hoverThickness' in opts ? opts.hoverThickness : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let notificationPredicate = opts && 'notificationPredicate' in opts ? opts.notificationPredicate : null;
    let interactive = opts && 'interactive' in opts ? opts.interactive : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[controller$] = controller;
    this[isAlwaysShown$] = isAlwaysShown;
    this[showTrackOnHover$] = showTrackOnHover;
    this[hoverThickness$] = hoverThickness;
    this[thickness$] = thickness;
    this[radius$] = radius;
    this[notificationPredicate$] = notificationPredicate;
    this[interactive$] = interactive;
    scrollbar$0.Scrollbar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollbar$0.Scrollbar.prototype;
  dart.addTypeTests(scrollbar$0.Scrollbar);
  dart.addTypeCaches(scrollbar$0.Scrollbar);
  dart.setMethodSignature(scrollbar$0.Scrollbar, () => ({
    __proto__: dart.getMethods(scrollbar$0.Scrollbar.__proto__),
    createState: dart.fnType(scrollbar$0._ScrollbarState, [])
  }));
  dart.setLibraryUri(scrollbar$0.Scrollbar, I[1]);
  dart.setFieldSignature(scrollbar$0.Scrollbar, () => ({
    __proto__: dart.getFields(scrollbar$0.Scrollbar.__proto__),
    child: dart.finalFieldType(framework.Widget),
    controller: dart.finalFieldType(dart.nullable(scroll_controller.ScrollController)),
    isAlwaysShown: dart.finalFieldType(dart.nullable(core.bool)),
    showTrackOnHover: dart.finalFieldType(dart.nullable(core.bool)),
    hoverThickness: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    radius: dart.finalFieldType(dart.nullable(ui.Radius)),
    interactive: dart.finalFieldType(dart.nullable(core.bool)),
    notificationPredicate: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [scroll_notification.ScrollNotification])))
  }));
  var _useCupertinoScrollbar = dart.privateName(scrollbar$0, "_useCupertinoScrollbar");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  scrollbar$0._ScrollbarState = class _ScrollbarState extends framework.State$(scrollbar$0.Scrollbar) {
    get [_useCupertinoScrollbar]() {
      return theme$.Theme.of(this.context).platform == platform.TargetPlatform.iOS;
    }
    build(context) {
      let t0, t0$, t0$0, t0$1, t0$2;
      if (context == null) dart.nullFailed(I[0], 176, 29, "context");
      if (dart.test(this[_useCupertinoScrollbar])) {
        return new scrollbar$.CupertinoScrollbar.new({child: this.widget.child, isAlwaysShown: (t0 = this.widget.isAlwaysShown, t0 == null ? false : t0), thickness: (t0$ = this.widget.thickness, t0$ == null ? 3 : t0$), thicknessWhileDragging: (t0$0 = this.widget.thickness, t0$0 == null ? 8 : t0$0), radius: (t0$1 = this.widget.radius, t0$1 == null ? scrollbar$.CupertinoScrollbar.defaultRadius : t0$1), radiusWhileDragging: (t0$2 = this.widget.radius, t0$2 == null ? scrollbar$.CupertinoScrollbar.defaultRadiusWhileDragging : t0$2), controller: this.widget.controller, notificationPredicate: this.widget.notificationPredicate, $creationLocationd_0dea112b090073317d4: C[0] || CT.C0});
      }
      return new scrollbar$0._MaterialScrollbar.new({child: this.widget.child, controller: this.widget.controller, isAlwaysShown: this.widget.isAlwaysShown, showTrackOnHover: this.widget.showTrackOnHover, hoverThickness: this.widget.hoverThickness, thickness: this.widget.thickness, radius: this.widget.radius, notificationPredicate: this.widget.notificationPredicate, interactive: this.widget.interactive, $creationLocationd_0dea112b090073317d4: C[10] || CT.C10});
    }
  };
  (scrollbar$0._ScrollbarState.new = function() {
    scrollbar$0._ScrollbarState.__proto__.new.call(this);
    ;
  }).prototype = scrollbar$0._ScrollbarState.prototype;
  dart.addTypeTests(scrollbar$0._ScrollbarState);
  dart.addTypeCaches(scrollbar$0._ScrollbarState);
  dart.setMethodSignature(scrollbar$0._ScrollbarState, () => ({
    __proto__: dart.getMethods(scrollbar$0._ScrollbarState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(scrollbar$0._ScrollbarState, () => ({
    __proto__: dart.getGetters(scrollbar$0._ScrollbarState.__proto__),
    [_useCupertinoScrollbar]: core.bool
  }));
  dart.setLibraryUri(scrollbar$0._ScrollbarState, I[1]);
  var showTrackOnHover$0 = dart.privateName(scrollbar$0, "_MaterialScrollbar.showTrackOnHover");
  var hoverThickness$0 = dart.privateName(scrollbar$0, "_MaterialScrollbar.hoverThickness");
  scrollbar$0._MaterialScrollbar = class _MaterialScrollbar extends scrollbar.RawScrollbar {
    get showTrackOnHover() {
      return this[showTrackOnHover$0];
    }
    set showTrackOnHover(value) {
      super.showTrackOnHover = value;
    }
    get hoverThickness() {
      return this[hoverThickness$0];
    }
    set hoverThickness(value) {
      super.hoverThickness = value;
    }
    createState() {
      return new scrollbar$0._MaterialScrollbarState.new();
    }
  };
  (scrollbar$0._MaterialScrollbar.new = function(opts) {
    let t0;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[0], 206, 21, "child");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
    let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
    let hoverThickness = opts && 'hoverThickness' in opts ? opts.hoverThickness : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let notificationPredicate = opts && 'notificationPredicate' in opts ? opts.notificationPredicate : null;
    let interactive = opts && 'interactive' in opts ? opts.interactive : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[showTrackOnHover$0] = showTrackOnHover;
    this[hoverThickness$0] = hoverThickness;
    scrollbar$0._MaterialScrollbar.__proto__.new.call(this, {key: key, child: child, controller: controller, isAlwaysShown: isAlwaysShown, thickness: thickness, radius: radius, fadeDuration: scrollbar$0._kScrollbarFadeDuration, timeToFade: scrollbar$0._kScrollbarTimeToFade, pressDuration: core.Duration.zero, notificationPredicate: (t0 = notificationPredicate, t0 == null ? C[21] || CT.C21 : t0), interactive: interactive, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollbar$0._MaterialScrollbar.prototype;
  dart.addTypeTests(scrollbar$0._MaterialScrollbar);
  dart.addTypeCaches(scrollbar$0._MaterialScrollbar);
  dart.setMethodSignature(scrollbar$0._MaterialScrollbar, () => ({
    __proto__: dart.getMethods(scrollbar$0._MaterialScrollbar.__proto__),
    createState: dart.fnType(scrollbar$0._MaterialScrollbarState, [])
  }));
  dart.setLibraryUri(scrollbar$0._MaterialScrollbar, I[1]);
  dart.setFieldSignature(scrollbar$0._MaterialScrollbar, () => ({
    __proto__: dart.getFields(scrollbar$0._MaterialScrollbar.__proto__),
    showTrackOnHover: dart.finalFieldType(dart.nullable(core.bool)),
    hoverThickness: dart.finalFieldType(dart.nullable(core.double))
  }));
  var ___MaterialScrollbarState__hoverAnimationController = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_hoverAnimationController");
  var ___MaterialScrollbarState__hoverAnimationController_isSet = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_hoverAnimationController#isSet");
  var _dragIsActive = dart.privateName(scrollbar$0, "_dragIsActive");
  var _hoverIsActive = dart.privateName(scrollbar$0, "_hoverIsActive");
  var ___MaterialScrollbarState__colorScheme = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_colorScheme");
  var ___MaterialScrollbarState__colorScheme_isSet = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_colorScheme#isSet");
  var ___MaterialScrollbarState__scrollbarTheme = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_scrollbarTheme");
  var ___MaterialScrollbarState__scrollbarTheme_isSet = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_scrollbarTheme#isSet");
  var ___MaterialScrollbarState__useAndroidScrollbar = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_useAndroidScrollbar");
  var ___MaterialScrollbarState__useAndroidScrollbar_isSet = dart.privateName(scrollbar$0, "_#_MaterialScrollbarState#_useAndroidScrollbar#isSet");
  var _hoverAnimationController = dart.privateName(scrollbar$0, "_hoverAnimationController");
  var _colorScheme = dart.privateName(scrollbar$0, "_colorScheme");
  var _scrollbarTheme = dart.privateName(scrollbar$0, "_scrollbarTheme");
  var _useAndroidScrollbar = dart.privateName(scrollbar$0, "_useAndroidScrollbar");
  var _showTrackOnHover = dart.privateName(scrollbar$0, "_showTrackOnHover");
  var _states = dart.privateName(scrollbar$0, "_states");
  var _name = dart.privateName(ui, "_name");
  var _thumbColor = dart.privateName(scrollbar$0, "_thumbColor");
  var Color_value = dart.privateName(ui, "Color.value");
  var _trackColor = dart.privateName(scrollbar$0, "_trackColor");
  var _trackBorderColor = dart.privateName(scrollbar$0, "_trackBorderColor");
  var _thickness = dart.privateName(scrollbar$0, "_thickness");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _name$ = dart.privateName(platform, "_name");
  scrollbar$0._MaterialScrollbarState = class _MaterialScrollbarState extends scrollbar.RawScrollbarState$(scrollbar$0._MaterialScrollbar) {
    get [_hoverAnimationController]() {
      let t0;
      return dart.test(this[___MaterialScrollbarState__hoverAnimationController_isSet]) ? (t0 = this[___MaterialScrollbarState__hoverAnimationController], t0) : dart.throw(new _internal.LateError.fieldNI("_hoverAnimationController"));
    }
    set [_hoverAnimationController](t0) {
      if (t0 == null) dart.nullFailed(I[0], 237, 28, "null");
      this[___MaterialScrollbarState__hoverAnimationController_isSet] = true;
      this[___MaterialScrollbarState__hoverAnimationController] = t0;
    }
    get [_colorScheme]() {
      let t1;
      return dart.test(this[___MaterialScrollbarState__colorScheme_isSet]) ? (t1 = this[___MaterialScrollbarState__colorScheme], t1) : dart.throw(new _internal.LateError.fieldNI("_colorScheme"));
    }
    set [_colorScheme](t1) {
      if (t1 == null) dart.nullFailed(I[0], 240, 20, "null");
      this[___MaterialScrollbarState__colorScheme_isSet] = true;
      this[___MaterialScrollbarState__colorScheme] = t1;
    }
    get [_scrollbarTheme]() {
      let t2;
      return dart.test(this[___MaterialScrollbarState__scrollbarTheme_isSet]) ? (t2 = this[___MaterialScrollbarState__scrollbarTheme], t2) : dart.throw(new _internal.LateError.fieldNI("_scrollbarTheme"));
    }
    set [_scrollbarTheme](t2) {
      if (t2 == null) dart.nullFailed(I[0], 241, 27, "null");
      this[___MaterialScrollbarState__scrollbarTheme_isSet] = true;
      this[___MaterialScrollbarState__scrollbarTheme] = t2;
    }
    get [_useAndroidScrollbar]() {
      let t3;
      return dart.test(this[___MaterialScrollbarState__useAndroidScrollbar_isSet]) ? (t3 = this[___MaterialScrollbarState__useAndroidScrollbar], t3) : dart.throw(new _internal.LateError.fieldNI("_useAndroidScrollbar"));
    }
    set [_useAndroidScrollbar](t3) {
      if (t3 == null) dart.nullFailed(I[0], 243, 13, "null");
      this[___MaterialScrollbarState__useAndroidScrollbar_isSet] = true;
      this[___MaterialScrollbarState__useAndroidScrollbar] = t3;
    }
    get showScrollbar() {
      let t4, t4$;
      t4$ = (t4 = this.widget.isAlwaysShown, t4 == null ? this[_scrollbarTheme].isAlwaysShown : t4);
      return t4$ == null ? false : t4$;
    }
    get enableGestures() {
      let t4, t4$;
      t4$ = (t4 = this.widget.interactive, t4 == null ? this[_scrollbarTheme].interactive : t4);
      return t4$ == null ? !dart.test(this[_useAndroidScrollbar]) : t4$;
    }
    get [_showTrackOnHover]() {
      let t4, t4$;
      t4$ = (t4 = this.widget.showTrackOnHover, t4 == null ? this[_scrollbarTheme].showTrackOnHover : t4);
      return t4$ == null ? false : t4$;
    }
    get [_states]() {
      return (() => {
        let t4 = T.LinkedHashSetOfMaterialState().new();
        if (dart.test(this[_dragIsActive])) t4.add(material_state.MaterialState.dragged);
        if (dart.test(this[_hoverIsActive])) t4.add(material_state.MaterialState.hovered);
        return t4;
      })();
    }
    get [_thumbColor]() {
      let onSurface = this[_colorScheme].onSurface;
      let brightness = this[_colorScheme].brightness;
      let dragColor = null;
      let dragColor$35isSet = false;
      function dragColor$35get() {
        return dragColor$35isSet ? dragColor : dart.throw(new _internal.LateError.localNI("dragColor"));
      }
      dart.fn(dragColor$35get, T.VoidToColor());
      function dragColor$35set(t8) {
        if (t8 == null) dart.nullFailed(I[0], 261, 16, "null");
        dragColor$35isSet = true;
        return dragColor = t8;
      }
      dart.fn(dragColor$35set, T.ColorTodynamic());
      let hoverColor = null;
      let hoverColor$35isSet = false;
      function hoverColor$35get() {
        return hoverColor$35isSet ? hoverColor : dart.throw(new _internal.LateError.localNI("hoverColor"));
      }
      dart.fn(hoverColor$35get, T.VoidToColor());
      function hoverColor$35set(t13) {
        if (t13 == null) dart.nullFailed(I[0], 262, 16, "null");
        hoverColor$35isSet = true;
        return hoverColor = t13;
      }
      dart.fn(hoverColor$35set, T.ColorTodynamic());
      let idleColor = null;
      let idleColor$35isSet = false;
      function idleColor$35get() {
        return idleColor$35isSet ? idleColor : dart.throw(new _internal.LateError.localNI("idleColor"));
      }
      dart.fn(idleColor$35get, T.VoidToColor());
      function idleColor$35set(t18) {
        if (t18 == null) dart.nullFailed(I[0], 263, 16, "null");
        idleColor$35isSet = true;
        return idleColor = t18;
      }
      dart.fn(idleColor$35set, T.ColorTodynamic());
      switch (brightness) {
        case C[22] || CT.C22:
        {
          dragColor$35set(onSurface.withOpacity(0.6));
          hoverColor$35set(onSurface.withOpacity(0.5));
          idleColor$35set(dart.test(this[_useAndroidScrollbar]) ? theme$.Theme.of(this.context).highlightColor.withOpacity(1.0) : onSurface.withOpacity(0.1));
          break;
        }
        case C[23] || CT.C23:
        {
          dragColor$35set(onSurface.withOpacity(0.75));
          hoverColor$35set(onSurface.withOpacity(0.65));
          idleColor$35set(dart.test(this[_useAndroidScrollbar]) ? theme$.Theme.of(this.context).highlightColor.withOpacity(1.0) : onSurface.withOpacity(0.3));
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return material_state.MaterialStateProperty.resolveWith(ui.Color, dart.fn(states => {
        let t20, t20$, t20$0, t20$1, t20$2, t20$3, t20$4, t20$5;
        if (states == null) dart.nullFailed(I[0], 281, 66, "states");
        if (dart.test(states.contains(material_state.MaterialState.dragged))) {
          t20$ = (t20 = this[_scrollbarTheme].thumbColor, t20 == null ? null : t20.resolve(states));
          return t20$ == null ? dragColor$35get() : t20$;
        }
        if (dart.test(states.contains(material_state.MaterialState.hovered)) && dart.test(this[_showTrackOnHover])) {
          t20$1 = (t20$0 = this[_scrollbarTheme].thumbColor, t20$0 == null ? null : t20$0.resolve(states));
          return t20$1 == null ? hoverColor$35get() : t20$1;
        }
        return dart.nullCheck(ui.Color.lerp((t20$3 = (t20$2 = this[_scrollbarTheme].thumbColor, t20$2 == null ? null : t20$2.resolve(states)), t20$3 == null ? idleColor$35get() : t20$3), (t20$5 = (t20$4 = this[_scrollbarTheme].thumbColor, t20$4 == null ? null : t20$4.resolve(states)), t20$5 == null ? hoverColor$35get() : t20$5), this[_hoverAnimationController].value));
      }, T.SetOfMaterialStateToColor()));
    }
    get [_trackColor]() {
      let onSurface = this[_colorScheme].onSurface;
      let brightness = this[_colorScheme].brightness;
      return material_state.MaterialStateProperty.resolveWith(ui.Color, dart.fn(states => {
        let t20, t20$;
        if (states == null) dart.nullFailed(I[0], 301, 66, "states");
        if (dart.test(states.contains(material_state.MaterialState.hovered)) && dart.test(this[_showTrackOnHover])) {
          t20$ = (t20 = this[_scrollbarTheme].trackColor, t20 == null ? null : t20.resolve(states));
          return t20$ == null ? brightness == ui.Brightness.light ? onSurface.withOpacity(0.03) : onSurface.withOpacity(0.05) : t20$;
        }
        return C[24] || CT.C24;
      }, T.SetOfMaterialStateToColor()));
    }
    get [_trackBorderColor]() {
      let onSurface = this[_colorScheme].onSurface;
      let brightness = this[_colorScheme].brightness;
      return material_state.MaterialStateProperty.resolveWith(ui.Color, dart.fn(states => {
        let t20, t20$;
        if (states == null) dart.nullFailed(I[0], 315, 66, "states");
        if (dart.test(states.contains(material_state.MaterialState.hovered)) && dart.test(this[_showTrackOnHover])) {
          t20$ = (t20 = this[_scrollbarTheme].trackBorderColor, t20 == null ? null : t20.resolve(states));
          return t20$ == null ? brightness == ui.Brightness.light ? onSurface.withOpacity(0.1) : onSurface.withOpacity(0.25) : t20$;
        }
        return C[24] || CT.C24;
      }, T.SetOfMaterialStateToColor()));
    }
    get [_thickness]() {
      return material_state.MaterialStateProperty.resolveWith(core.double, dart.fn(states => {
        let t21, t20, t20$, t21$, t20$0, t20$1;
        if (states == null) dart.nullFailed(I[0], 327, 66, "states");
        if (dart.test(states.contains(material_state.MaterialState.hovered)) && dart.test(this[_showTrackOnHover])) {
          t20$ = (t20 = this.widget.hoverThickness, t20 == null ? (t21 = this[_scrollbarTheme].thickness, t21 == null ? null : t21.resolve(states)) : t20);
          return t20$ == null ? 12 : t20$;
        }
        t20$1 = (t20$0 = this.widget.thickness, t20$0 == null ? (t21$ = this[_scrollbarTheme].thickness, t21$ == null ? null : t21$.resolve(states)) : t20$0);
        return t20$1 == null ? 8 / (dart.test(this[_useAndroidScrollbar]) ? 2 : 1) : t20$1;
      }, T.SetOfMaterialStateTodouble()));
    }
    initState() {
      super.initState();
      this[_hoverAnimationController] = new animation_controller.AnimationController.new({vsync: this, duration: C[25] || CT.C25});
      this[_hoverAnimationController].addListener(dart.fn(() => {
        this.updateScrollbarPainter();
      }, T.VoidTovoid()));
    }
    didChangeDependencies() {
      let theme = theme$.Theme.of(this.context);
      this[_colorScheme] = theme.colorScheme;
      this[_scrollbarTheme] = theme.scrollbarTheme;
      switch (theme.platform) {
        case C[26] || CT.C26:
        {
          this[_useAndroidScrollbar] = true;
          break;
        }
        case C[27] || CT.C27:
        case C[28] || CT.C28:
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[31] || CT.C31:
        {
          this[_useAndroidScrollbar] = false;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      super.didChangeDependencies();
    }
    updateScrollbarPainter() {
      let t21, t21$, t21$0, t21$1, t21$2, t20;
      t20 = this.scrollbarPainter;
      (() => {
        t20.color = this[_thumbColor].resolve(this[_states]);
        t20.trackColor = this[_trackColor].resolve(this[_states]);
        t20.trackBorderColor = this[_trackBorderColor].resolve(this[_states]);
        t20.textDirection = basic.Directionality.of(this.context);
        t20.thickness = this[_thickness].resolve(this[_states]);
        t20.radius = (t21$ = (t21 = this.widget.radius, t21 == null ? this[_scrollbarTheme].radius : t21), t21$ == null ? dart.test(this[_useAndroidScrollbar]) ? null : scrollbar$0._kScrollbarRadius : t21$);
        t20.crossAxisMargin = (t21$0 = this[_scrollbarTheme].crossAxisMargin, t21$0 == null ? dart.test(this[_useAndroidScrollbar]) ? 0.0 : 2 : t21$0);
        t20.mainAxisMargin = (t21$1 = this[_scrollbarTheme].mainAxisMargin, t21$1 == null ? 0.0 : t21$1);
        t20.minLength = (t21$2 = this[_scrollbarTheme].minThumbLength, t21$2 == null ? 48 : t21$2);
        t20.padding = media_query.MediaQuery.of(this.context).padding;
        return t20;
      })();
    }
    handleThumbPressStart(localPosition) {
      if (localPosition == null) dart.nullFailed(I[0], 387, 37, "localPosition");
      super.handleThumbPressStart(localPosition);
      this.setState(dart.fn(() => {
        this[_dragIsActive] = true;
      }, T.VoidTovoid()));
    }
    handleThumbPressEnd(localPosition, velocity) {
      if (localPosition == null) dart.nullFailed(I[0], 393, 35, "localPosition");
      if (velocity == null) dart.nullFailed(I[0], 393, 59, "velocity");
      super.handleThumbPressEnd(localPosition, velocity);
      this.setState(dart.fn(() => {
        this[_dragIsActive] = false;
      }, T.VoidTovoid()));
    }
    handleHover(event) {
      if (event == null) dart.nullFailed(I[0], 399, 38, "event");
      super.handleHover(event);
      if (dart.test(this.isPointerOverScrollbar(event.position, event.kind))) {
        this.setState(dart.fn(() => {
          this[_hoverIsActive] = true;
        }, T.VoidTovoid()));
        this[_hoverAnimationController].forward();
      } else if (dart.test(this[_hoverIsActive])) {
        this.setState(dart.fn(() => {
          this[_hoverIsActive] = false;
        }, T.VoidTovoid()));
        this[_hoverAnimationController].reverse();
      }
    }
    handleHoverExit(event) {
      if (event == null) dart.nullFailed(I[0], 414, 41, "event");
      super.handleHoverExit(event);
      this.setState(dart.fn(() => {
        this[_hoverIsActive] = false;
      }, T.VoidTovoid()));
      this[_hoverAnimationController].reverse();
    }
    dispose() {
      this[_hoverAnimationController].dispose();
      super.dispose();
    }
  };
  (scrollbar$0._MaterialScrollbarState.new = function() {
    this[___MaterialScrollbarState__hoverAnimationController] = null;
    this[___MaterialScrollbarState__hoverAnimationController_isSet] = false;
    this[_dragIsActive] = false;
    this[_hoverIsActive] = false;
    this[___MaterialScrollbarState__colorScheme] = null;
    this[___MaterialScrollbarState__colorScheme_isSet] = false;
    this[___MaterialScrollbarState__scrollbarTheme] = null;
    this[___MaterialScrollbarState__scrollbarTheme_isSet] = false;
    this[___MaterialScrollbarState__useAndroidScrollbar] = null;
    this[___MaterialScrollbarState__useAndroidScrollbar_isSet] = false;
    scrollbar$0._MaterialScrollbarState.__proto__.new.call(this);
    ;
  }).prototype = scrollbar$0._MaterialScrollbarState.prototype;
  dart.addTypeTests(scrollbar$0._MaterialScrollbarState);
  dart.addTypeCaches(scrollbar$0._MaterialScrollbarState);
  dart.setGetterSignature(scrollbar$0._MaterialScrollbarState, () => ({
    __proto__: dart.getGetters(scrollbar$0._MaterialScrollbarState.__proto__),
    [_hoverAnimationController]: animation_controller.AnimationController,
    [_colorScheme]: color_scheme.ColorScheme,
    [_scrollbarTheme]: scrollbar_theme.ScrollbarThemeData,
    [_useAndroidScrollbar]: core.bool,
    [_showTrackOnHover]: core.bool,
    [_states]: core.Set$(material_state.MaterialState),
    [_thumbColor]: material_state.MaterialStateProperty$(ui.Color),
    [_trackColor]: material_state.MaterialStateProperty$(ui.Color),
    [_trackBorderColor]: material_state.MaterialStateProperty$(ui.Color),
    [_thickness]: material_state.MaterialStateProperty$(core.double)
  }));
  dart.setSetterSignature(scrollbar$0._MaterialScrollbarState, () => ({
    __proto__: dart.getSetters(scrollbar$0._MaterialScrollbarState.__proto__),
    [_hoverAnimationController]: animation_controller.AnimationController,
    [_colorScheme]: color_scheme.ColorScheme,
    [_scrollbarTheme]: scrollbar_theme.ScrollbarThemeData,
    [_useAndroidScrollbar]: core.bool
  }));
  dart.setLibraryUri(scrollbar$0._MaterialScrollbarState, I[1]);
  dart.setFieldSignature(scrollbar$0._MaterialScrollbarState, () => ({
    __proto__: dart.getFields(scrollbar$0._MaterialScrollbarState.__proto__),
    [___MaterialScrollbarState__hoverAnimationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [___MaterialScrollbarState__hoverAnimationController_isSet]: dart.fieldType(core.bool),
    [_dragIsActive]: dart.fieldType(core.bool),
    [_hoverIsActive]: dart.fieldType(core.bool),
    [___MaterialScrollbarState__colorScheme]: dart.fieldType(dart.nullable(color_scheme.ColorScheme)),
    [___MaterialScrollbarState__colorScheme_isSet]: dart.fieldType(core.bool),
    [___MaterialScrollbarState__scrollbarTheme]: dart.fieldType(dart.nullable(scrollbar_theme.ScrollbarThemeData)),
    [___MaterialScrollbarState__scrollbarTheme_isSet]: dart.fieldType(core.bool),
    [___MaterialScrollbarState__useAndroidScrollbar]: dart.fieldType(dart.nullable(core.bool)),
    [___MaterialScrollbarState__useAndroidScrollbar_isSet]: dart.fieldType(core.bool)
  }));
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  dart.defineLazy(scrollbar$0, {
    /*scrollbar$0._kScrollbarThickness*/get _kScrollbarThickness() {
      return 8;
    },
    /*scrollbar$0._kScrollbarThicknessWithTrack*/get _kScrollbarThicknessWithTrack() {
      return 12;
    },
    /*scrollbar$0._kScrollbarMargin*/get _kScrollbarMargin() {
      return 2;
    },
    /*scrollbar$0._kScrollbarMinLength*/get _kScrollbarMinLength() {
      return 48;
    },
    /*scrollbar$0._kScrollbarRadius*/get _kScrollbarRadius() {
      return C[32] || CT.C32;
    },
    /*scrollbar$0._kScrollbarFadeDuration*/get _kScrollbarFadeDuration() {
      return C[33] || CT.C33;
    },
    /*scrollbar$0._kScrollbarTimeToFade*/get _kScrollbarTimeToFade() {
      return C[34] || CT.C34;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/material/scrollbar.dart", {
    "package:flutter/src/material/scrollbar.dart": scrollbar$0
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["scrollbar.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/flutter/src/material/scrollbar.dart.lib.js"}');
  // Exports:
  return {
    src__material__scrollbar: scrollbar$0
  };
}));

//# sourceMappingURL=scrollbar.dart.lib.js.map
